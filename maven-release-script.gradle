task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    classpath += files(android.bootClasspath)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                artifact("$buildDir/outputs/aar/${project.name}-release.aar")

                artifact sourcesJar
                artifact javadocJar

                groupId = PUBLISHED_GROUP_ID
                artifactId = ARTIFACT_ID
                version = LIBRARY_VERSION

                pom {
                    name = LIBRARY_NAME
                    description = LIBRARY_DESCRIPTION
                    url = SITE_URL

                    licenses {
                        license {
                            name = LICENSE_NAME
                            url = LICENSE_URL
                        }
                    }
                    developers {
                        developer {
                            id = DEVELOPER_ID
                            name = DEVELOPER_NAME
                            email = DEVELOPER_EMAIL
                        }
                    }
                    scm {
                        connection = GIT_URL
                        developerConnection = GIT_URL
                        url = SITE_URL
                    }
                }
            }
        }

        repositories {
            maven {
                name = "LocalRepo"
                url = uri("${project.rootDir}/repo")
            }
        }
    }
}

//
//group = PUBLISHED_GROUP_ID
//version = LIBRARY_VERSION
//
//install {
//    repositories.mavenInstaller {
//        pom.project {
//            packaging 'aar'
//            groupId PUBLISHED_GROUP_ID
//            artifactId ARTIFACT_ID
//
//            name LIBRARY_NAME
//            description LIBRARY_DESCRIPTION
//            url SITE_URL
//
//            licenses {
//                license {
//                    name LICENSE_NAME
//                    url LICENSE_URL
//                }
//            }
//            developers {
//                developer {
//                    id DEVELOPER_ID
//                    name DEVELOPER_NAME
//                    email DEVELOPER_EMAIL
//                }
//            }
//            scm {
//                connection GIT_URL
//                developerConnection GIT_URL
//                url SITE_URL
//            }
//        }
//    }
//}
//
//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}
//
//task javadoc(type: Javadoc) {
//    failOnError = false
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        repo = BINTRAY_REPO
//        name = BINTRAY_NAME
//        desc = LIBRARY_DESCRIPTION
//        websiteUrl = SITE_URL
//        issueTrackerUrl = ISSUE_URL
//        vcsUrl = GIT_URL
//        licenses = ALL_LICENSES
//        dryRun = false
//        publish = true
//        override = false
//        publicDownloadNumbers = true
//        version {
//            desc = LIBRARY_DESCRIPTION
//        }
//    }
//}